shader TerrainShaderOne : ComputeColor, Texturing, ShaderBase,Transformation,PositionStream4
{
   stage float TextureRepeat =1.0f;
   stage float4 BlackColor=float4(0,0,0,1);
    
    rgroup PerMaterial    {
        stage Texture2D FirstWeights;
        stage Texture2D SecondWeights;
        stage Texture2D Texture_1;
        stage Texture2D Texture_2;
        stage Texture2D Texture_3;
        stage Texture2D Texture_4;
        stage Texture2D Texture_5;
        stage Texture2D Texture_6;
        stage Texture2D Texture_7;
        stage Texture2D Texture_8;
    }

    cbuffer PerView
    {
        stage float4 Viewport;
    }

    float4 projToWorld(in float4 pos, in float3 normal)
    {
        float3 scaling = normal * (WorldScale - 1);
        return mul(pos + float4(scaling.x, scaling.y, scaling.z, 0), WorldViewProjection);
    }

    float2 projToWindow(in float4 pos)
    {
        return float2(
            Viewport.x * 0.5 * (1 + (pos.x / pos.w)) + Viewport.z,
            Viewport.y * 0.5 * (1 - (pos.y / pos.w)) + Viewport.w
        );
    }


    stage float4 Shading1()
    {
        float4 FirstWeightsCol,SecondWeightsCol,outputColour,Tex1Col,Tex2Col,Tex3Col,
        Tex4Col,Tex5Col,Tex6Col,Tex7Col,Tex8Col;
        FirstWeightsCol = FirstWeights.SampleLevel(LinearRepeatSampler, streams.TexCoord,0);
        SecondWeightsCol = SecondWeights.SampleLevel(LinearRepeatSampler, streams.TexCoord,0);
        Tex1Col=Texture_1.SampleLevel(LinearRepeatSampler, streams.TexCoord,0);
        Tex2Col=Texture_2.SampleLevel(LinearRepeatSampler, streams.TexCoord,0);
        Tex3Col=Texture_3.SampleLevel(LinearRepeatSampler, streams.TexCoord,0);
        Tex4Col=Texture_4.SampleLevel(LinearRepeatSampler, streams.TexCoord,0);
        Tex5Col=Texture_5.SampleLevel(LinearRepeatSampler, streams.TexCoord,0);
        Tex6Col=Texture_6.SampleLevel(LinearRepeatSampler, streams.TexCoord,0);
        Tex7Col=Texture_7.SampleLevel(LinearRepeatSampler, streams.TexCoord,0);
        Tex8Col=Texture_8.SampleLevel(LinearRepeatSampler, streams.TexCoord,0);

	float4 color = lerp(BlackColor, Tex1Col, FirstWeightsCol.r);
	color = lerp(color, Tex2Col, FirstWeightsCol.g);
	color = lerp(color, Tex3Col, FirstWeightsCol.b);
	color = lerp(color, Tex4Col, FirstWeightsCol.a);
	color = lerp(color, Tex5Col, SecondWeightsCol.r);
	color = lerp(color, Tex6Col, SecondWeightsCol.g);
	color = lerp(color, Tex7Col, SecondWeightsCol.b);
	color = lerp(color, Tex8Col, SecondWeightsCol.a);
    
    return color;
    }

    float4 Shading2()
    {
        float4 FirstWeightsCol,SecondWeightsCol,outputColour,Tex1Col,Tex2Col,Tex3Col,
        Tex4Col,Tex5Col,Tex6Col,Tex7Col,Tex8Col;
        FirstWeightsCol = FirstWeights.SampleLevel(LinearRepeatSampler, TextureRepeat*streams.TexCoord,0);
        SecondWeightsCol = SecondWeights.SampleLevel(LinearRepeatSampler, TextureRepeat*streams.TexCoord,0);
        Tex1Col=Texture_1.SampleLevel(LinearRepeatSampler, TextureRepeat*streams.TexCoord,0);
        Tex2Col=Texture_2.SampleLevel(LinearRepeatSampler, TextureRepeat*streams.TexCoord,0);
        Tex3Col=Texture_3.SampleLevel(LinearRepeatSampler, TextureRepeat*streams.TexCoord,0);
        Tex4Col=Texture_4.SampleLevel(LinearRepeatSampler, TextureRepeat*streams.TexCoord,0);
        Tex5Col=Texture_5.SampleLevel(LinearRepeatSampler, TextureRepeat*streams.TexCoord,0);
        Tex6Col=Texture_6.SampleLevel(LinearRepeatSampler, TextureRepeat*streams.TexCoord,0);
        Tex7Col=Texture_7.SampleLevel(LinearRepeatSampler, TextureRepeat*streams.TexCoord,0);
        Tex8Col=Texture_8.SampleLevel(LinearRepeatSampler, TextureRepeat*streams.TexCoord,0);

	float4 color = lerp(BlackColor, Tex1Col, FirstWeightsCol.r);
	color = lerp(color, Tex2Col, FirstWeightsCol.g);
	color = lerp(color, Tex3Col, FirstWeightsCol.b);
	color = lerp(color, Tex4Col, FirstWeightsCol.a);
	color = lerp(color, Tex5Col, SecondWeightsCol.r);
	color = lerp(color, Tex6Col, SecondWeightsCol.g);
	color = lerp(color, Tex7Col, SecondWeightsCol.b);
	color = lerp(color, Tex8Col, SecondWeightsCol.a);
    
    return color;
    }

    float4 Shading()
    {
        float4 FirstWeightsColour,SecondWeightsColour, outputColour = float4(1.0f, 0.0f, 0.0f, 1.0f);
        FirstWeightsColour = FirstWeights.Sample(Sampler, streams.TexCoord);
        SecondWeightsColour = SecondWeights.Sample(Sampler, streams.TexCoord);
        float sum=FirstWeightsColour[0]+
        FirstWeightsColour[1]+FirstWeightsColour[2]+FirstWeightsColour[3]+
        SecondWeightsColour[0]+SecondWeightsColour[1]+SecondWeightsColour[2]+SecondWeightsColour[3];
        outputColour=(Texture_1.Sample(Sampler, streams.TexCoord)*
        FirstWeightsColour[0]+
        Texture_2.Sample(Sampler, streams.TexCoord)*FirstWeightsColour[1]+
        Texture_3.Sample(Sampler, streams.TexCoord)*FirstWeightsColour[2]+
        Texture_4.Sample(Sampler, streams.TexCoord)*FirstWeightsColour[3]+
        Texture_5.Sample(Sampler, streams.TexCoord)*SecondWeightsColour[0]+
        Texture_6.Sample(Sampler, streams.TexCoord)*SecondWeightsColour[1]+
        Texture_7.Sample(Sampler, streams.TexCoord)*SecondWeightsColour[2]+
        Texture_8.Sample(Sampler, streams.TexCoord)*SecondWeightsColour[3]);///sum;
        return outputColour;
    }

 //  pixel shader, needed
    stage override void PSMain()    {
        streams.ColorTarget = 
        Texture_1.Sample(Sampler, streams.TexCoord)*
        FirstWeights.Sample(Sampler, streams.TexCoord).r+
        Texture_2.Sample(Sampler, streams.TexCoord)*
        FirstWeights.Sample(Sampler, streams.TexCoord).g;
        //Texture_1.SampleLevel(LinearRepeatSampler, streams.TexCoord,0);//Shading1();
    }
          
    stage stream float3 Normal : NORMAL;

    // vertex shader, needed
    stage override void VSMain() {
        streams.ShadingPosition = mul(streams.Position, WorldViewProjection);//projToWorld(streams.Position,streams.Normal);    
    }

};
